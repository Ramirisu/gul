name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-22.04]
        cxx: [clang++-14, g++-12, cl]
        std: [11, 14, 17, 20, 23]
        build_type: [Debug]
        generator: [Ninja]
        extra_args: [""]
        install: [""]
        exclude:
          - os: windows-2022
            cxx: clang++-14
          - os: windows-2022
            cxx: g++-12
          - cxx: cl
            std: 11
          - os: ubuntu-22.04
            cxx: cl
        include:
          - os: ubuntu-20.04
            cxx: g++-4.8
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install g++-4.8
          - os: ubuntu-20.04
            cxx: g++-4.8
            std: 11
            build_type: Debug
            generator: Ninja
            extra_args: -DCMAKE_CXX_FLAGS=-fno-exceptions
            install: sudo apt install g++-4.8
          - os: ubuntu-20.04
            cxx: g++-5
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install g++-5
          - os: ubuntu-20.04
            cxx: g++-7
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install g++-7
          - os: ubuntu-22.04
            cxx: g++-9
            std: 11
            build_type: Debug
            generator: Ninja
          - os: ubuntu-22.04
            cxx: g++-10
            std: 11
            build_type: Debug
            generator: Ninja
          - os: ubuntu-22.04
            cxx: g++-11
            std: 11
            build_type: Debug
            generator: Ninja
          - os: ubuntu-20.04
            cxx: clang++-3.5
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-3.5
          - os: ubuntu-20.04
            cxx: clang++-3.5
            std: 11
            build_type: Debug
            generator: Ninja
            extra_args: -DCMAKE_CXX_FLAGS=-fno-exceptions
            install: sudo apt install clang-3.5
          - os: ubuntu-20.04
            cxx: clang++-3.6
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-3.6
          - os: ubuntu-20.04
            cxx: clang++-3.7
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-3.7
          - os: ubuntu-20.04
            cxx: clang++-3.8
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-3.8
          - os: ubuntu-20.04
            cxx: clang++-3.9
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-3.9
          - os: ubuntu-20.04
            cxx: clang++-4.0
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-4.0
          - os: ubuntu-20.04
            cxx: clang++-5.0
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-5.0
          - os: ubuntu-20.04
            cxx: clang++-6.0
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-6.0
          - os: ubuntu-20.04
            cxx: clang++-7
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-7
          - os: ubuntu-20.04
            cxx: clang++-8
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-8
          - os: ubuntu-20.04
            cxx: clang++-9
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-9
          - os: ubuntu-20.04
            cxx: clang++-10
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-10
          - os: ubuntu-22.04
            cxx: clang++-11
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-11
          - os: ubuntu-22.04
            cxx: clang++-12
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-12
          - os: ubuntu-22.04
            cxx: clang++-13
            std: 11
            build_type: Debug
            generator: Ninja
            install: sudo apt install clang-13
          - os: ubuntu-22.04
            cxx: clang++-13
            std: 11
            build_type: Debug
            generator: Ninja
            extra_args: -DCMAKE_CXX_FLAGS=-fsanitize=address
            install: sudo apt install clang-13
          - os: windows-2019
            cxx: cl
            std: 14
            build_type: Debug
            generator: Visual Studio 16 2019
            extra_args: -A x64 -T v140
          - os: windows-2019
            cxx: cl
            std: 14
            build_type: Debug
            generator: Visual Studio 16 2019
            extra_args: -A x64 -T v141
          - os: windows-2019
            cxx: cl
            std: 14
            build_type: Debug
            generator: Visual Studio 16 2019
            extra_args: -A x64 -T v142
          - os: windows-2022
            cxx: clang-cl
            std: 14
            build_type: Debug
            generator: Visual Studio 17 2022
            extra_args: -A x64 -T ClangCl
          - os: windows-2022
            cxx: g++
            std: 11
            build_type: Debug
            generator: Ninja
          - os: macos-10.15
            cxx: clang++
            std: 11
            built_type: Debug
            generator: Ninja
          - os: macos-11
            cxx: clang++
            std: 11
            built_type: Debug
            generator: Ninja
          - os: macos-12
            cxx: clang++
            std: 11
            built_type: Debug
            generator: Ninja

    steps:
      - uses: actions/checkout@v3

      - name: Add msbuild to PATH env
        if: matrix.cxx == 'cl'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Add GCC 4.8 5.5 6.4
        if: matrix.os == 'ubuntu-20.04'
        run: |
          # GCC 4.8 5.5 6.4
          sudo apt-add-repository 'deb http://azure.archive.ubuntu.com/ubuntu/ bionic main'
          sudo apt-add-repository 'deb http://azure.archive.ubuntu.com/ubuntu/ bionic universe'
          # Clang 3.5 3.6 3.7 3.8 3.9 4.0
          sudo apt-add-repository 'deb http://azure.archive.ubuntu.com/ubuntu/ xenial main'
          sudo apt-add-repository 'deb http://azure.archive.ubuntu.com/ubuntu/ xenial universe'

      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake
          ${{ matrix.install }}
          ninja --version
          cmake --version

      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install cmake ninja
          ninja --version
          cmake --version

      - name: Configure
        shell: bash
        run: |
          cmake \
            -B build \
            -G "${{ matrix.generator }}" \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_CXX_STANDARD:STRING=${{ matrix.std }} \
            -DGUL_BUILD_TESTS=ON \
            ${{ matrix.extra_args }}

      - name: Build
        shell: bash
        run: cmake --build build

      - name: Test
        shell: bash
        working-directory:  ${{ github.workspace }}/build
        run: ctest --output-on-failure .
